"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIStrings = exports.MIN_TEXT_LENGTH = exports.MAX_TEXT_LENGTH = void 0;
const lighthouse_1 = require("lighthouse");
exports.MAX_TEXT_LENGTH = 160;
exports.MIN_TEXT_LENGTH = 100;
exports.UIStrings = {
    title: 'Description length is appropriate',
    failureTitle: `Description is not between ${exports.MIN_TEXT_LENGTH} - ${exports.MAX_TEXT_LENGTH} characters`,
    description: `A description provides an extended summary of a page and should have the right amount of content for search engines to parse. Description should be between ${exports.MIN_TEXT_LENGTH} - ${exports.MAX_TEXT_LENGTH} characters`,
    explanation: 'Description text is missing or empty.',
};
class DescriptionLength extends lighthouse_1.Audit {
    static get meta() {
        return {
            id: 'description-length',
            title: exports.UIStrings.title,
            failureTitle: exports.UIStrings.failureTitle,
            description: exports.UIStrings.description,
            requiredArtifacts: ['MetaElements'],
        };
    }
    static audit(artifacts) {
        const metaDescription = artifacts.MetaElements.find((meta) => meta.name === 'description');
        if (!metaDescription) {
            return {
                score: 0,
                explanation: exports.UIStrings.explanation,
            };
        }
        const description = metaDescription.content || '';
        const trimmedDescriptionLength = description.trim().length;
        if (trimmedDescriptionLength < exports.MIN_TEXT_LENGTH ||
            trimmedDescriptionLength > exports.MAX_TEXT_LENGTH) {
            return {
                score: 0,
            };
        }
        return {
            score: 1,
        };
    }
}
exports.default = DescriptionLength;
//# sourceMappingURL=description-length.js.map