"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lighthouse_1 = require("lighthouse");
const page_functions_1 = __importDefault(require("lighthouse/lighthouse-core/lib/page-functions"));
function getElement(node) {
    return {
        text: (node.innerText && node.innerText.trim()) || null,
    };
}
function getImageElement(node) {
    return {
        src: node.src || null,
    };
}
function collectElements() {
    const bodyElements = getElementsInDocument('body');
    const h1Elements = getElementsInDocument('h1');
    const h2Elements = getElementsInDocument('h2');
    const imgElements = getElementsInDocument('img');
    const liElements = getElementsInDocument('li');
    const pElements = getElementsInDocument('p');
    const tableElements = getElementsInDocument('table');
    return {
        body: bodyElements.map(getElement),
        h1: h1Elements.map(getElement),
        h2: h2Elements.map(getElement),
        img: imgElements.map(getImageElement),
        li: liElements.map(getElement),
        p: pElements.map(getElement),
        table: tableElements.map(getElement),
    };
}
class Elements extends lighthouse_1.Gatherer {
    async afterPass(passContext) {
        const driver = passContext.driver;
        const expression = `(() => {
      ${page_functions_1.default.getElementsInDocumentString};
      ${getElement.toString()};
      ${getImageElement.toString()};

      return (${collectElements})();
    })()`;
        const result = await driver.evaluateAsync(expression, {
            useIsolation: true,
        });
        return result;
    }
}
exports.default = Elements;
//# sourceMappingURL=elements.js.map