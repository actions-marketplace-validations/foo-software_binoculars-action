"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const webhook_1 = require("@slack/webhook");
const getLighthouseScoreColor_1 = __importDefault(require("./getLighthouseScoreColor"));
exports.default = async ({ author, branch, pr: prParam, results, sha, slackWebhookUrl, }) => {
    const webhook = new webhook_1.IncomingWebhook(slackWebhookUrl);
    const pr = typeof prParam !== 'string' || prParam === 'true' ? undefined : prParam;
    for (const result of results) {
        const score = result.result.categories.binocularsSeo.score * 100;
        let text = `*URL*: ${result.url}\n*Score*: \`${score}\``;
        if (result.report) {
            text += `\n*Report*: <${result.report}|click here>`;
        }
        if (branch) {
            const branchText = !pr ? branch : `<${pr}|${branch}>`;
            text = `${text}\n\nchange made in \`${branchText}\`.`;
        }
        let footer;
        if (author) {
            footer = `by ${author}`;
            if (typeof sha === 'string') {
                footer = `${footer} in ${sha.slice(0, 10)}`;
            }
        }
        await webhook.send({
            text: 'Binoculars Audit',
            attachments: [
                {
                    color: getLighthouseScoreColor_1.default({
                        isHex: true,
                        score,
                    }),
                    text,
                    thumb_url: 'https://s3.amazonaws.com/foo.software/images/marketing/binoculars.png',
                    ...(!footer
                        ? {}
                        : {
                            footer,
                        }),
                },
            ],
        });
    }
};
//# sourceMappingURL=slackNotify.js.map